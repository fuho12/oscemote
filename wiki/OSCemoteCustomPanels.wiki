#summary How to make custom panels for OSCemote with HTML and Javascript.

= Introduction =

To see some examples and information look here:
http://lux.vu/iphone/oscemote/webpanels/

= Details =

Custom panels in OSCemote are basically web pages, so you can use whatever HTML/javascript creation tools you are comfortable with.

To make your own, just make an HTML page with osc: links in it and type the URL for that page into the bar at the top of the Custom panel in OSCemote.

Feel free to copy any of the examples on this page http://lux.vu/iphone/oscemote/webpanels/ as a templates to get started. They are normal HTML, CSS and JavaScript with a couple of special exceptions as follows.

  * They will be viewed with iPhone Safari
  * Pages are at a fixed zoom level of 1.0
  * They support osc: URLs like these:
  ** osc:/simple/message
  ** osc:/example/A?i=99&f=3.14
  ** osc:/example/B?s=foodles

I recommend using Safari on your desktop to test with as it is very similar to Safari for iPhone. You may also want to refer to this Apple Documentation for Safari. You will need to be signed up for the free Apple Developer program to view this documentation.

= Examples =

The two example custom panels were made in Dashcode (an Apple HTML/javascript editor)
You can find the source for the example panels here:

(use View Source or Save As in your browser to see the code)

http://lux.vu/iphone/oscemote/webpanels/SimpleExample/index.html
http://lux.vu/iphone/oscemote/webpanels/SimpleExample/main.js

http://lux.vu/iphone/oscemote/webpanels/CircleDemo/index.html
http://lux.vu/iphone/oscemote/webpanels/CircleDemo/main.js

There is another experimental example that uses jQuery here:
http://lux.vu/iphone/oscemote/webpanels/iphonome/index.html

= Reusing the Builtin Controls =

The built-in panels aren't made with the same technology as the custom ones for two reasons.  One I added the custom panels after the built-in ones were already done and two because the custom panels aren't able to get the high performance that I had hoped.  The speed is reasonable, but not ideal, mostly because of the speed of the javascript engine.  Also note that there is a limit of one OSC message per javascript event due to how the javascript engine handles the osc: urls.

The examples above give a starting point for similar controls, but are incomplete.